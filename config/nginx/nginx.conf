# Configuration Nginx pour Scrapinium
# Optimisée pour la performance et la sécurité

upstream scrapinium_backend {
    # Configuration load balancer avec health checks
    least_conn;
    server scrapinium-1:8000 max_fails=3 fail_timeout=30s;
    server scrapinium-2:8000 max_fails=3 fail_timeout=30s;
    server scrapinium-3:8000 max_fails=3 fail_timeout=30s;
    
    # Keep-alive connections pour la performance
    keepalive 32;
}

# Configuration du cache
proxy_cache_path /var/cache/nginx 
    levels=1:2 
    keys_zone=scrapinium_cache:10m 
    max_size=1g 
    inactive=60m 
    use_temp_path=off;

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=scraping:5m rate=2r/s;

server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Redirection HTTPS obligatoire
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name scrapinium.example.com;  # À adapter
    
    # ===========================
    # CONFIGURATION SSL
    # ===========================
    
    ssl_certificate /etc/ssl/certs/scrapinium.crt;
    ssl_certificate_key /etc/ssl/private/scrapinium.key;
    
    # Configuration SSL moderne
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # ===========================
    # HEADERS DE SÉCURITÉ
    # ===========================
    
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # ===========================
    # CONFIGURATION GÉNÉRALE
    # ===========================
    
    # Taille maximale des requêtes (pour uploads)
    client_max_body_size 50M;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 300s;  # 5 minutes pour le scraping
    
    # Buffers
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # ===========================
    # ROUTES STATIQUES
    # ===========================
    
    # Assets statiques avec cache long
    location /static/ {
        alias /app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Served-By nginx;
        
        # Compression
        gzip_static on;
        gzip_vary on;
    }
    
    # Favicon
    location = /favicon.ico {
        alias /app/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
        access_log off;
    }
    
    # Robots.txt
    location = /robots.txt {
        alias /app/static/robots.txt;
        log_not_found off;
        access_log off;
    }
    
    # ===========================
    # API ROUTES
    # ===========================
    
    # Health check (pas de rate limiting)
    location = /health {
        proxy_pass http://scrapinium_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache court pour les health checks
        proxy_cache scrapinium_cache;
        proxy_cache_valid 200 10s;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        access_log off;
    }
    
    # API de scraping avec rate limiting strict
    location ~ ^/scrape {
        limit_req zone=scraping burst=5 nodelay;
        
        proxy_pass http://scrapinium_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pas de cache pour les opérations de scraping
        proxy_cache off;
        add_header X-Cache-Status "BYPASS" always;
    }
    
    # API générale avec rate limiting modéré
    location ~ ^/(api|stats|performance|security) {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://scrapinium_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache pour les stats (court)
        proxy_cache scrapinium_cache;
        proxy_cache_valid 200 30s;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # Interface web (dashboard)
    location / {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://scrapinium_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache pour les pages web
        proxy_cache scrapinium_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # ===========================
    # MONITORING ET LOGS
    # ===========================
    
    # Logs d'accès personnalisés
    log_format scrapinium_log '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               'rt=$request_time uct="$upstream_connect_time" '
                               'uht="$upstream_header_time" urt="$upstream_response_time" '
                               'cache="$upstream_cache_status"';
    
    access_log /var/log/nginx/scrapinium_access.log scrapinium_log;
    error_log /var/log/nginx/scrapinium_error.log warn;
}

# ===========================
# CONFIGURATION GLOBALE
# ===========================

# Configuration des workers
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Sécurité
    server_tokens off;
    more_clear_headers Server;
    
    # Buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
}